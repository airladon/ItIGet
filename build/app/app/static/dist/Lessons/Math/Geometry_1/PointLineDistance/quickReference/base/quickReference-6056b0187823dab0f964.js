!function(e){function t(t){for(var i,a,s=t[0],l=t[1],c=t[2],p=0,f=[];p<s.length;p++)a=s[p],o[a]&&f.push(o[a][0]),o[a]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(u&&u(t);f.length;)f.shift()();return r.push.apply(r,c||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],i=!0,s=1;s<n.length;s++){var l=n[s];0!==o[l]&&(i=!1)}i&&(r.splice(t--,1),e=a(a.s=n[0]))}return e}var i={},o={64:0},r=[];function a(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;r.push([728,0,1]),n()}({0:function(e,t){e.exports=Fig},258:function(e,t){e.exports={uid:"base",topic:"quickReference",type:"presentation",references:["Main"]}},554:function(e,t,n){},728:function(e,t,n){"use strict";n.r(t);var i=n(0),o=n.n(i),r=n(14),a=n(6),s=(n(554),o.a.tools.g2.Point),l=["qrPointsLineDistance_lines","qrPointsLineDistance_points","qrPointsLineDistance_distance","qrPointsLineDistance_distance2"],c=n(15),u=(n(3),n(2));function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}o.a.DiagramElementPrimative,o.a.DiagramObjectAngle,o.a.DiagramObjectLine,o.a.DiagramElementCollection;var y=o.a.Transform,_=function(){function e(t,n){var i,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:new y("Common").rotate(0).translate(0,0);return function(t,n){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),(i=function(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?h(e):t}(this,d(e).call(this,t,n,o))).setPosition(i.layout.position),i.diagram.addElements(h(i),i.layout.addElements),i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(e,u.a),function(e,t,n){t&&f(e.prototype,t)}(e,[{key:"pulsePoint",value:function(){this._fig._point.pulseScaleNow(1,4),this.diagram.animateNextFrame()}},{key:"pulsePointEnd",value:function(){this._fig._pointEnd.pulseScaleNow(1,4),this.diagram.animateNextFrame()}},{key:"pulseLine",value:function(){this._fig._line.pulseWidth({line:6}),this.diagram.animateNextFrame()}},{key:"pulseRightAngle",value:function(){this._fig._rightAngle.pulseScaleNow(1,2),this.diagram.animateNextFrame()}},{key:"pulsePerpendicularLabel",value:function(e){var t=0<arguments.length&&void 0!==e?e:null;this._fig._perpendicular._label.pulseScaleNow(1,2,0,t),this.diagram.animateNextFrame()}},{key:"pulseEnd",value:function(){this._fig._end.pulseScaleNow(1,10),this.diagram.animateNextFrame()}},{key:"pulseDistanceEnd",value:function(){this._fig._distanceEnd.pulseWidth({label:2,line:1}),this.diagram.animateNextFrame()}},{key:"pulsePoints",value:function(){this.pulsePoint(),this.pulsePointEnd()}}]),e}(),b=n(76),g=n.n(b),P=n(258),v=n.n(P);function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function D(e,t,n){return(D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(i){var o=Object.getOwnPropertyDescriptor(i,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n.d(t,"default",function(){return N});var S=g.a.uid,E=v.a.uid,x=o.a.Transform,q=o.a.Rect,k=o.a.tools.html.click,N=function(){function e(t){var n,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:(new x).scale(1,1).translate(0,0);!function(t,n){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this);var o=function(){var e=Object(a.a)(l),t=e.colors,n=new s(0,.7),i=new s(-2,-.7),o=new s(2,-.7),r=new s(0,-.7),c=n.add(i.x-.4,0);e.mid=r,e.p1=i;var u={name:"point",method:"polygon",options:{sides:100,radius:.05,color:t.qrPointsLineDistance_points,fill:!0,position:n},mods:{scenarios:{default:{position:n},end:{position:c}}}},p={name:"pointEnd",method:"polygon",options:{sides:100,radius:.05,color:t.qrPointsLineDistance_points,fill:!0,position:c}},f={name:"line",method:"line",options:{vertexSpaceStart:"center",color:t.qrPointsLineDistance_lines,width:.03,p1:i,p2:o}},d={name:"perpendicular",method:"line",options:{p1:n,p2:r,color:t.qrPointsLineDistance_distance,width:.01,label:{text:"d",scale:1.4,location:"left",offset:.05,linePosition:.5}}},h={name:"distanceEnd",method:"line",options:{p1:c,p2:i,color:t.qrPointsLineDistance_distance2,width:.01,label:{text:"d",scale:1.4,location:"top",offset:.05,linePosition:.5}}},m={name:"rightAngle",method:"angle",options:{p1:o,p2:r,p3:n,color:t.qrPointsLineDistance_distance,autoRightAngle:!0,curve:{radius:.2,width:.01}}},y={name:"fig",method:"collection",addElements:[{name:"end",method:"polygon",options:{color:t.qrPointsLineDistance_lines,radius:.01,sides:100,position:i}},u,f,d,m,p,h],mods:{scenarios:{default:{position:[0,0]},low:{position:[0,-.5]},summary:{position:[0,-.5]}}}};return e.addElements=[y],e}();(n=function(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(e):t}(this,L(e).call(this,t,o,i,"collection",_))).hasTouchableElements=!0;var r=n._collection,c=n.layout.colors,u={point:k(r.pulsePoints,[r],c.qrPointsLineDistance_points),point_:k(r.pulsePointEnd,[r],c.qrPointsLineDistance_points),point__:k(r.pulsePoint,[r],c.qrPointsLineDistance_points),point___:k(r.pulsePoint,[r],c.qrPointsLineDistance_points),line:k(r.pulseLine,[r],c.qrPointsLineDistance_lines),line_:k(r.pulseLine,[r],c.qrPointsLineDistance_lines),perpendicular_line:k(r.pulsePerpendicularLabel,[r,null],c.qrPointsLineDistance_distance),point_and_line_end:k(r.pulseDistanceEnd,[r],c.qrPointsLineDistance_distance2),line_end:k(r.pulseEnd,[r],c.qrPointsLineDistance_lines)};return n.setTitle("Point Line Distance"),n.setDescription("The distance between a |point| and a |line| is the |shortest distance|. When the |point_| is closest to a |line_end|, then the distance is between the |point_and_line_end|. When the |point__| is |not closest| to a line end, then the shortest distance is the |perpendicular_line| between |point___| and |line_|. ",u),n.setLink("".concat(g.a.path,"/").concat(g.a.uid,"/explanation/base?page=1")),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(e,c.a),function(e,t,n){t&&O(e.prototype,t)}(e,[{key:"show",value:function(){this.setDiagramSpace({location:"top",size:.5}),D(L(e.prototype),"show",this).call(this);var t=this._collection;this._collection._fig.setScenario("low"),t.showAll(),this.transformToQRWindow(t,new q(-2,-1.1,4,2)),this.diagram.animateNextFrame()}}]),e}();Object(r.b)(g.a.path,S,E,{Main:N})},76:function(e,t){e.exports={title:"Point to Line Distance",dependencies:["RightAngleTriangles"],enabled:!0,path:"Math/Geometry_1",uid:"PointLineDistance"}}});